{"id":"node_modules/lodash-es/_baseToNumber.js","dependencies":[{"name":"C:\\Users\\nicho\\Desktop\\Udemy\\TheCompleteJavascriptCourse\\complete-javascript-course\\17-Modern-JS-Modules-Tooling\\starter\\package.json","includedInParent":true,"mtime":1629411845000},{"name":"C:\\Users\\nicho\\Desktop\\Udemy\\TheCompleteJavascriptCourse\\complete-javascript-course\\17-Modern-JS-Modules-Tooling\\starter\\node_modules\\lodash-es\\package.json","includedInParent":true,"mtime":1629405926538},{"name":"./isSymbol.js","loc":{"line":1,"column":21},"parent":"C:\\Users\\nicho\\Desktop\\Udemy\\TheCompleteJavascriptCourse\\complete-javascript-course\\17-Modern-JS-Modules-Tooling\\starter\\node_modules\\lodash-es\\_baseToNumber.js","resolved":"C:\\Users\\nicho\\Desktop\\Udemy\\TheCompleteJavascriptCourse\\complete-javascript-course\\17-Modern-JS-Modules-Tooling\\starter\\node_modules\\lodash-es\\isSymbol.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _isSymbol = _interopRequireDefault(require(\"./isSymbol.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n/**\n * The base implementation of `_.toNumber` which doesn't ensure correct\n * conversions of binary, hexadecimal, or octal string values.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n */\n\nfunction baseToNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n\n  if ((0, _isSymbol.default)(value)) {\n    return NAN;\n  }\n\n  return +value;\n}\n\nvar _default = baseToNumber;\nexports.default = _default;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"node_modules/lodash-es/_baseToNumber.js","original":{"line":1,"column":0}},{"generated":{"line":12,"column":0},"source":"node_modules/lodash-es/_baseToNumber.js","original":{"line":3,"column":0}},{"generated":{"line":13,"column":0},"source":"node_modules/lodash-es/_baseToNumber.js","original":{"line":4,"column":0}},{"name":"NAN","generated":{"line":13,"column":4},"source":"node_modules/lodash-es/_baseToNumber.js","original":{"line":4,"column":4}},{"generated":{"line":13,"column":7},"source":"node_modules/lodash-es/_baseToNumber.js","original":{"line":4,"column":7}},{"generated":{"line":13,"column":10},"source":"node_modules/lodash-es/_baseToNumber.js","original":{"line":4,"column":10}},{"generated":{"line":13,"column":14},"source":"node_modules/lodash-es/_baseToNumber.js","original":{"line":4,"column":14}},{"generated":{"line":13,"column":15},"source":"node_modules/lodash-es/_baseToNumber.js","original":{"line":4,"column":0}},{"generated":{"line":14,"column":0},"source":"node_modules/lodash-es/_baseToNumber.js","original":{"line":6,"column":0}},{"generated":{"line":15,"column":0},"source":"node_modules/lodash-es/_baseToNumber.js","original":{"line":7,"column":0}},{"generated":{"line":16,"column":0},"source":"node_modules/lodash-es/_baseToNumber.js","original":{"line":8,"column":0}},{"generated":{"line":17,"column":0},"source":"node_modules/lodash-es/_baseToNumber.js","original":{"line":9,"column":0}},{"generated":{"line":18,"column":0},"source":"node_modules/lodash-es/_baseToNumber.js","original":{"line":10,"column":0}},{"generated":{"line":19,"column":0},"source":"node_modules/lodash-es/_baseToNumber.js","original":{"line":11,"column":0}},{"generated":{"line":20,"column":0},"source":"node_modules/lodash-es/_baseToNumber.js","original":{"line":12,"column":0}},{"generated":{"line":21,"column":0},"source":"node_modules/lodash-es/_baseToNumber.js","original":{"line":13,"column":0}},{"generated":{"line":23,"column":0},"source":"node_modules/lodash-es/_baseToNumber.js","original":{"line":14,"column":0}},{"name":"baseToNumber","generated":{"line":23,"column":9},"source":"node_modules/lodash-es/_baseToNumber.js","original":{"line":14,"column":9}},{"generated":{"line":23,"column":21},"source":"node_modules/lodash-es/_baseToNumber.js","original":{"line":14,"column":0}},{"name":"value","generated":{"line":23,"column":22},"source":"node_modules/lodash-es/_baseToNumber.js","original":{"line":14,"column":22}},{"generated":{"line":23,"column":27},"source":"node_modules/lodash-es/_baseToNumber.js","original":{"line":14,"column":0}},{"generated":{"line":23,"column":29},"source":"node_modules/lodash-es/_baseToNumber.js","original":{"line":14,"column":29}},{"generated":{"line":24,"column":0},"source":"node_modules/lodash-es/_baseToNumber.js","original":{"line":15,"column":2}},{"generated":{"line":24,"column":6},"source":"node_modules/lodash-es/_baseToNumber.js","original":{"line":15,"column":6}},{"name":"value","generated":{"line":24,"column":13},"source":"node_modules/lodash-es/_baseToNumber.js","original":{"line":15,"column":13}},{"generated":{"line":24,"column":18},"source":"node_modules/lodash-es/_baseToNumber.js","original":{"line":15,"column":6}},{"generated":{"line":24,"column":22},"source":"node_modules/lodash-es/_baseToNumber.js","original":{"line":15,"column":22}},{"generated":{"line":24,"column":30},"source":"node_modules/lodash-es/_baseToNumber.js","original":{"line":15,"column":2}},{"generated":{"line":24,"column":32},"source":"node_modules/lodash-es/_baseToNumber.js","original":{"line":15,"column":32}},{"generated":{"line":25,"column":0},"source":"node_modules/lodash-es/_baseToNumber.js","original":{"line":16,"column":4}},{"name":"value","generated":{"line":25,"column":11},"source":"node_modules/lodash-es/_baseToNumber.js","original":{"line":16,"column":11}},{"generated":{"line":25,"column":16},"source":"node_modules/lodash-es/_baseToNumber.js","original":{"line":16,"column":4}},{"generated":{"line":26,"column":0},"source":"node_modules/lodash-es/_baseToNumber.js","original":{"line":17,"column":3}},{"generated":{"line":28,"column":0},"source":"node_modules/lodash-es/_baseToNumber.js","original":{"line":18,"column":2}},{"generated":{"line":28,"column":6},"source":"node_modules/lodash-es/_baseToNumber.js","original":{"line":18,"column":6}},{"name":"value","generated":{"line":28,"column":29},"source":"node_modules/lodash-es/_baseToNumber.js","original":{"line":18,"column":15}},{"generated":{"line":28,"column":34},"source":"node_modules/lodash-es/_baseToNumber.js","original":{"line":18,"column":6}},{"generated":{"line":28,"column":35},"source":"node_modules/lodash-es/_baseToNumber.js","original":{"line":18,"column":2}},{"generated":{"line":28,"column":37},"source":"node_modules/lodash-es/_baseToNumber.js","original":{"line":18,"column":23}},{"generated":{"line":29,"column":0},"source":"node_modules/lodash-es/_baseToNumber.js","original":{"line":19,"column":4}},{"name":"NAN","generated":{"line":29,"column":11},"source":"node_modules/lodash-es/_baseToNumber.js","original":{"line":19,"column":11}},{"generated":{"line":29,"column":14},"source":"node_modules/lodash-es/_baseToNumber.js","original":{"line":19,"column":4}},{"generated":{"line":30,"column":0},"source":"node_modules/lodash-es/_baseToNumber.js","original":{"line":20,"column":3}},{"generated":{"line":32,"column":0},"source":"node_modules/lodash-es/_baseToNumber.js","original":{"line":21,"column":2}},{"generated":{"line":32,"column":9},"source":"node_modules/lodash-es/_baseToNumber.js","original":{"line":21,"column":9}},{"name":"value","generated":{"line":32,"column":10},"source":"node_modules/lodash-es/_baseToNumber.js","original":{"line":21,"column":10}},{"generated":{"line":32,"column":15},"source":"node_modules/lodash-es/_baseToNumber.js","original":{"line":21,"column":2}},{"generated":{"line":33,"column":0},"source":"node_modules/lodash-es/_baseToNumber.js","original":{"line":22,"column":1}},{"name":"baseToNumber","generated":{"line":35,"column":15},"source":"node_modules/lodash-es/_baseToNumber.js","original":{"line":24,"column":15}}],"sources":{"node_modules/lodash-es/_baseToNumber.js":"import isSymbol from './isSymbol.js';\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/**\n * The base implementation of `_.toNumber` which doesn't ensure correct\n * conversions of binary, hexadecimal, or octal string values.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n */\nfunction baseToNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  return +value;\n}\n\nexport default baseToNumber;\n"},"lineCount":null}},"error":null,"hash":"f20ad05b9a91b050b3584c9ead971940","cacheData":{"env":{}}}