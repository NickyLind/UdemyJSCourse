{"id":"node_modules/lodash-es/_baseIsEqual.js","dependencies":[{"name":"C:\\Users\\nicho\\Desktop\\Udemy\\TheCompleteJavascriptCourse\\complete-javascript-course\\17-Modern-JS-Modules-Tooling\\starter\\package.json","includedInParent":true,"mtime":1629411845000},{"name":"C:\\Users\\nicho\\Desktop\\Udemy\\TheCompleteJavascriptCourse\\complete-javascript-course\\17-Modern-JS-Modules-Tooling\\starter\\node_modules\\lodash-es\\package.json","includedInParent":true,"mtime":1629405926538},{"name":"./_baseIsEqualDeep.js","loc":{"line":1,"column":28},"parent":"C:\\Users\\nicho\\Desktop\\Udemy\\TheCompleteJavascriptCourse\\complete-javascript-course\\17-Modern-JS-Modules-Tooling\\starter\\node_modules\\lodash-es\\_baseIsEqual.js","resolved":"C:\\Users\\nicho\\Desktop\\Udemy\\TheCompleteJavascriptCourse\\complete-javascript-course\\17-Modern-JS-Modules-Tooling\\starter\\node_modules\\lodash-es\\_baseIsEqualDeep.js"},{"name":"./isObjectLike.js","loc":{"line":2,"column":25},"parent":"C:\\Users\\nicho\\Desktop\\Udemy\\TheCompleteJavascriptCourse\\complete-javascript-course\\17-Modern-JS-Modules-Tooling\\starter\\node_modules\\lodash-es\\_baseIsEqual.js","resolved":"C:\\Users\\nicho\\Desktop\\Udemy\\TheCompleteJavascriptCourse\\complete-javascript-course\\17-Modern-JS-Modules-Tooling\\starter\\node_modules\\lodash-es\\isObjectLike.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _baseIsEqualDeep = _interopRequireDefault(require(\"./_baseIsEqualDeep.js\"));\n\nvar _isObjectLike = _interopRequireDefault(require(\"./isObjectLike.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * The base implementation of `_.isEqual` which supports partial comparisons\n * and tracks traversed objects.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Unordered comparison\n *  2 - Partial comparison\n * @param {Function} [customizer] The function to customize comparisons.\n * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n */\nfunction baseIsEqual(value, other, bitmask, customizer, stack) {\n  if (value === other) {\n    return true;\n  }\n\n  if (value == null || other == null || !(0, _isObjectLike.default)(value) && !(0, _isObjectLike.default)(other)) {\n    return value !== value && other !== other;\n  }\n\n  return (0, _baseIsEqualDeep.default)(value, other, bitmask, customizer, baseIsEqual, stack);\n}\n\nvar _default = baseIsEqual;\nexports.default = _default;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"node_modules/lodash-es/_baseIsEqual.js","original":{"line":1,"column":0}},{"generated":{"line":10,"column":0},"source":"node_modules/lodash-es/_baseIsEqual.js","original":{"line":2,"column":0}},{"generated":{"line":14,"column":0},"source":"node_modules/lodash-es/_baseIsEqual.js","original":{"line":4,"column":0}},{"generated":{"line":15,"column":0},"source":"node_modules/lodash-es/_baseIsEqual.js","original":{"line":5,"column":0}},{"generated":{"line":16,"column":0},"source":"node_modules/lodash-es/_baseIsEqual.js","original":{"line":6,"column":0}},{"generated":{"line":17,"column":0},"source":"node_modules/lodash-es/_baseIsEqual.js","original":{"line":7,"column":0}},{"generated":{"line":18,"column":0},"source":"node_modules/lodash-es/_baseIsEqual.js","original":{"line":8,"column":0}},{"generated":{"line":19,"column":0},"source":"node_modules/lodash-es/_baseIsEqual.js","original":{"line":9,"column":0}},{"generated":{"line":20,"column":0},"source":"node_modules/lodash-es/_baseIsEqual.js","original":{"line":10,"column":0}},{"generated":{"line":21,"column":0},"source":"node_modules/lodash-es/_baseIsEqual.js","original":{"line":11,"column":0}},{"generated":{"line":22,"column":0},"source":"node_modules/lodash-es/_baseIsEqual.js","original":{"line":12,"column":0}},{"generated":{"line":23,"column":0},"source":"node_modules/lodash-es/_baseIsEqual.js","original":{"line":13,"column":0}},{"generated":{"line":24,"column":0},"source":"node_modules/lodash-es/_baseIsEqual.js","original":{"line":14,"column":0}},{"generated":{"line":25,"column":0},"source":"node_modules/lodash-es/_baseIsEqual.js","original":{"line":15,"column":0}},{"generated":{"line":26,"column":0},"source":"node_modules/lodash-es/_baseIsEqual.js","original":{"line":16,"column":0}},{"generated":{"line":27,"column":0},"source":"node_modules/lodash-es/_baseIsEqual.js","original":{"line":17,"column":0}},{"generated":{"line":28,"column":0},"source":"node_modules/lodash-es/_baseIsEqual.js","original":{"line":18,"column":0}},{"name":"baseIsEqual","generated":{"line":28,"column":9},"source":"node_modules/lodash-es/_baseIsEqual.js","original":{"line":18,"column":9}},{"generated":{"line":28,"column":20},"source":"node_modules/lodash-es/_baseIsEqual.js","original":{"line":18,"column":0}},{"name":"value","generated":{"line":28,"column":21},"source":"node_modules/lodash-es/_baseIsEqual.js","original":{"line":18,"column":21}},{"generated":{"line":28,"column":26},"source":"node_modules/lodash-es/_baseIsEqual.js","original":{"line":18,"column":0}},{"name":"other","generated":{"line":28,"column":28},"source":"node_modules/lodash-es/_baseIsEqual.js","original":{"line":18,"column":28}},{"generated":{"line":28,"column":33},"source":"node_modules/lodash-es/_baseIsEqual.js","original":{"line":18,"column":0}},{"name":"bitmask","generated":{"line":28,"column":35},"source":"node_modules/lodash-es/_baseIsEqual.js","original":{"line":18,"column":35}},{"generated":{"line":28,"column":42},"source":"node_modules/lodash-es/_baseIsEqual.js","original":{"line":18,"column":0}},{"name":"customizer","generated":{"line":28,"column":44},"source":"node_modules/lodash-es/_baseIsEqual.js","original":{"line":18,"column":44}},{"generated":{"line":28,"column":54},"source":"node_modules/lodash-es/_baseIsEqual.js","original":{"line":18,"column":0}},{"name":"stack","generated":{"line":28,"column":56},"source":"node_modules/lodash-es/_baseIsEqual.js","original":{"line":18,"column":56}},{"generated":{"line":28,"column":61},"source":"node_modules/lodash-es/_baseIsEqual.js","original":{"line":18,"column":0}},{"generated":{"line":28,"column":63},"source":"node_modules/lodash-es/_baseIsEqual.js","original":{"line":18,"column":63}},{"generated":{"line":29,"column":0},"source":"node_modules/lodash-es/_baseIsEqual.js","original":{"line":19,"column":2}},{"name":"value","generated":{"line":29,"column":6},"source":"node_modules/lodash-es/_baseIsEqual.js","original":{"line":19,"column":6}},{"generated":{"line":29,"column":11},"source":"node_modules/lodash-es/_baseIsEqual.js","original":{"line":19,"column":11}},{"name":"other","generated":{"line":29,"column":16},"source":"node_modules/lodash-es/_baseIsEqual.js","original":{"line":19,"column":16}},{"generated":{"line":29,"column":21},"source":"node_modules/lodash-es/_baseIsEqual.js","original":{"line":19,"column":2}},{"generated":{"line":29,"column":23},"source":"node_modules/lodash-es/_baseIsEqual.js","original":{"line":19,"column":23}},{"generated":{"line":30,"column":0},"source":"node_modules/lodash-es/_baseIsEqual.js","original":{"line":20,"column":4}},{"generated":{"line":30,"column":11},"source":"node_modules/lodash-es/_baseIsEqual.js","original":{"line":20,"column":11}},{"generated":{"line":30,"column":15},"source":"node_modules/lodash-es/_baseIsEqual.js","original":{"line":20,"column":4}},{"generated":{"line":31,"column":0},"source":"node_modules/lodash-es/_baseIsEqual.js","original":{"line":21,"column":3}},{"generated":{"line":33,"column":0},"source":"node_modules/lodash-es/_baseIsEqual.js","original":{"line":22,"column":2}},{"name":"value","generated":{"line":33,"column":6},"source":"node_modules/lodash-es/_baseIsEqual.js","original":{"line":22,"column":6}},{"generated":{"line":33,"column":11},"source":"node_modules/lodash-es/_baseIsEqual.js","original":{"line":22,"column":11}},{"generated":{"line":33,"column":15},"source":"node_modules/lodash-es/_baseIsEqual.js","original":{"line":22,"column":15}},{"generated":{"line":33,"column":19},"source":"node_modules/lodash-es/_baseIsEqual.js","original":{"line":22,"column":6}},{"name":"other","generated":{"line":33,"column":23},"source":"node_modules/lodash-es/_baseIsEqual.js","original":{"line":22,"column":23}},{"generated":{"line":33,"column":28},"source":"node_modules/lodash-es/_baseIsEqual.js","original":{"line":22,"column":28}},{"generated":{"line":33,"column":32},"source":"node_modules/lodash-es/_baseIsEqual.js","original":{"line":22,"column":32}},{"generated":{"line":33,"column":36},"source":"node_modules/lodash-es/_baseIsEqual.js","original":{"line":22,"column":6}},{"generated":{"line":33,"column":40},"source":"node_modules/lodash-es/_baseIsEqual.js","original":{"line":22,"column":41}},{"generated":{"line":33,"column":41},"source":"node_modules/lodash-es/_baseIsEqual.js","original":{"line":22,"column":42}},{"name":"value","generated":{"line":33,"column":68},"source":"node_modules/lodash-es/_baseIsEqual.js","original":{"line":22,"column":55}},{"generated":{"line":33,"column":73},"source":"node_modules/lodash-es/_baseIsEqual.js","original":{"line":22,"column":42}},{"generated":{"line":33,"column":74},"source":"node_modules/lodash-es/_baseIsEqual.js","original":{"line":22,"column":41}},{"generated":{"line":33,"column":78},"source":"node_modules/lodash-es/_baseIsEqual.js","original":{"line":22,"column":65}},{"generated":{"line":33,"column":79},"source":"node_modules/lodash-es/_baseIsEqual.js","original":{"line":22,"column":66}},{"name":"other","generated":{"line":33,"column":106},"source":"node_modules/lodash-es/_baseIsEqual.js","original":{"line":22,"column":79}},{"generated":{"line":33,"column":111},"source":"node_modules/lodash-es/_baseIsEqual.js","original":{"line":22,"column":66}},{"generated":{"line":33,"column":112},"source":"node_modules/lodash-es/_baseIsEqual.js","original":{"line":22,"column":2}},{"generated":{"line":33,"column":114},"source":"node_modules/lodash-es/_baseIsEqual.js","original":{"line":22,"column":88}},{"generated":{"line":34,"column":0},"source":"node_modules/lodash-es/_baseIsEqual.js","original":{"line":23,"column":4}},{"name":"value","generated":{"line":34,"column":11},"source":"node_modules/lodash-es/_baseIsEqual.js","original":{"line":23,"column":11}},{"generated":{"line":34,"column":16},"source":"node_modules/lodash-es/_baseIsEqual.js","original":{"line":23,"column":16}},{"name":"value","generated":{"line":34,"column":21},"source":"node_modules/lodash-es/_baseIsEqual.js","original":{"line":23,"column":21}},{"generated":{"line":34,"column":26},"source":"node_modules/lodash-es/_baseIsEqual.js","original":{"line":23,"column":11}},{"name":"other","generated":{"line":34,"column":30},"source":"node_modules/lodash-es/_baseIsEqual.js","original":{"line":23,"column":30}},{"generated":{"line":34,"column":35},"source":"node_modules/lodash-es/_baseIsEqual.js","original":{"line":23,"column":35}},{"name":"other","generated":{"line":34,"column":40},"source":"node_modules/lodash-es/_baseIsEqual.js","original":{"line":23,"column":40}},{"generated":{"line":34,"column":45},"source":"node_modules/lodash-es/_baseIsEqual.js","original":{"line":23,"column":4}},{"generated":{"line":35,"column":0},"source":"node_modules/lodash-es/_baseIsEqual.js","original":{"line":24,"column":3}},{"generated":{"line":37,"column":0},"source":"node_modules/lodash-es/_baseIsEqual.js","original":{"line":25,"column":2}},{"generated":{"line":37,"column":9},"source":"node_modules/lodash-es/_baseIsEqual.js","original":{"line":25,"column":9}},{"name":"value","generated":{"line":37,"column":39},"source":"node_modules/lodash-es/_baseIsEqual.js","original":{"line":25,"column":25}},{"generated":{"line":37,"column":44},"source":"node_modules/lodash-es/_baseIsEqual.js","original":{"line":25,"column":9}},{"name":"other","generated":{"line":37,"column":46},"source":"node_modules/lodash-es/_baseIsEqual.js","original":{"line":25,"column":32}},{"generated":{"line":37,"column":51},"source":"node_modules/lodash-es/_baseIsEqual.js","original":{"line":25,"column":9}},{"name":"bitmask","generated":{"line":37,"column":53},"source":"node_modules/lodash-es/_baseIsEqual.js","original":{"line":25,"column":39}},{"generated":{"line":37,"column":60},"source":"node_modules/lodash-es/_baseIsEqual.js","original":{"line":25,"column":9}},{"name":"customizer","generated":{"line":37,"column":62},"source":"node_modules/lodash-es/_baseIsEqual.js","original":{"line":25,"column":48}},{"generated":{"line":37,"column":72},"source":"node_modules/lodash-es/_baseIsEqual.js","original":{"line":25,"column":9}},{"name":"baseIsEqual","generated":{"line":37,"column":74},"source":"node_modules/lodash-es/_baseIsEqual.js","original":{"line":25,"column":60}},{"generated":{"line":37,"column":85},"source":"node_modules/lodash-es/_baseIsEqual.js","original":{"line":25,"column":9}},{"name":"stack","generated":{"line":37,"column":87},"source":"node_modules/lodash-es/_baseIsEqual.js","original":{"line":25,"column":73}},{"generated":{"line":37,"column":92},"source":"node_modules/lodash-es/_baseIsEqual.js","original":{"line":25,"column":9}},{"generated":{"line":37,"column":93},"source":"node_modules/lodash-es/_baseIsEqual.js","original":{"line":25,"column":2}},{"generated":{"line":38,"column":0},"source":"node_modules/lodash-es/_baseIsEqual.js","original":{"line":26,"column":1}},{"name":"baseIsEqual","generated":{"line":40,"column":15},"source":"node_modules/lodash-es/_baseIsEqual.js","original":{"line":28,"column":15}}],"sources":{"node_modules/lodash-es/_baseIsEqual.js":"import baseIsEqualDeep from './_baseIsEqualDeep.js';\nimport isObjectLike from './isObjectLike.js';\n\n/**\n * The base implementation of `_.isEqual` which supports partial comparisons\n * and tracks traversed objects.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Unordered comparison\n *  2 - Partial comparison\n * @param {Function} [customizer] The function to customize comparisons.\n * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n */\nfunction baseIsEqual(value, other, bitmask, customizer, stack) {\n  if (value === other) {\n    return true;\n  }\n  if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {\n    return value !== value && other !== other;\n  }\n  return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n}\n\nexport default baseIsEqual;\n"},"lineCount":null}},"error":null,"hash":"0e526278cff4f4597dafb19a2e59c524","cacheData":{"env":{}}}