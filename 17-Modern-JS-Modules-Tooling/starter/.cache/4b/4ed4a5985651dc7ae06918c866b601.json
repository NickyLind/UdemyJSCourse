{"id":"node_modules/lodash-es/_baseFindKey.js","dependencies":[{"name":"C:\\Users\\nicho\\Desktop\\Udemy\\TheCompleteJavascriptCourse\\complete-javascript-course\\17-Modern-JS-Modules-Tooling\\starter\\package.json","includedInParent":true,"mtime":1629411845000},{"name":"C:\\Users\\nicho\\Desktop\\Udemy\\TheCompleteJavascriptCourse\\complete-javascript-course\\17-Modern-JS-Modules-Tooling\\starter\\node_modules\\lodash-es\\package.json","includedInParent":true,"mtime":1629405926538}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\n/**\n * The base implementation of methods like `_.findKey` and `_.findLastKey`,\n * without support for iteratee shorthands, which iterates over `collection`\n * using `eachFunc`.\n *\n * @private\n * @param {Array|Object} collection The collection to inspect.\n * @param {Function} predicate The function invoked per iteration.\n * @param {Function} eachFunc The function to iterate over `collection`.\n * @returns {*} Returns the found element or its key, else `undefined`.\n */\nfunction baseFindKey(collection, predicate, eachFunc) {\n  var result;\n  eachFunc(collection, function (value, key, collection) {\n    if (predicate(value, key, collection)) {\n      result = key;\n      return false;\n    }\n  });\n  return result;\n}\n\nvar _default = baseFindKey;\nexports.default = _default;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"node_modules/lodash-es/_baseFindKey.js","original":{"line":1,"column":0}},{"generated":{"line":9,"column":0},"source":"node_modules/lodash-es/_baseFindKey.js","original":{"line":2,"column":0}},{"generated":{"line":10,"column":0},"source":"node_modules/lodash-es/_baseFindKey.js","original":{"line":3,"column":0}},{"generated":{"line":11,"column":0},"source":"node_modules/lodash-es/_baseFindKey.js","original":{"line":4,"column":0}},{"generated":{"line":12,"column":0},"source":"node_modules/lodash-es/_baseFindKey.js","original":{"line":5,"column":0}},{"generated":{"line":13,"column":0},"source":"node_modules/lodash-es/_baseFindKey.js","original":{"line":6,"column":0}},{"generated":{"line":14,"column":0},"source":"node_modules/lodash-es/_baseFindKey.js","original":{"line":7,"column":0}},{"generated":{"line":15,"column":0},"source":"node_modules/lodash-es/_baseFindKey.js","original":{"line":8,"column":0}},{"generated":{"line":16,"column":0},"source":"node_modules/lodash-es/_baseFindKey.js","original":{"line":9,"column":0}},{"generated":{"line":17,"column":0},"source":"node_modules/lodash-es/_baseFindKey.js","original":{"line":10,"column":0}},{"generated":{"line":18,"column":0},"source":"node_modules/lodash-es/_baseFindKey.js","original":{"line":11,"column":0}},{"generated":{"line":19,"column":0},"source":"node_modules/lodash-es/_baseFindKey.js","original":{"line":12,"column":0}},{"name":"baseFindKey","generated":{"line":19,"column":9},"source":"node_modules/lodash-es/_baseFindKey.js","original":{"line":12,"column":9}},{"generated":{"line":19,"column":20},"source":"node_modules/lodash-es/_baseFindKey.js","original":{"line":12,"column":0}},{"name":"collection","generated":{"line":19,"column":21},"source":"node_modules/lodash-es/_baseFindKey.js","original":{"line":12,"column":21}},{"generated":{"line":19,"column":31},"source":"node_modules/lodash-es/_baseFindKey.js","original":{"line":12,"column":0}},{"name":"predicate","generated":{"line":19,"column":33},"source":"node_modules/lodash-es/_baseFindKey.js","original":{"line":12,"column":33}},{"generated":{"line":19,"column":42},"source":"node_modules/lodash-es/_baseFindKey.js","original":{"line":12,"column":0}},{"name":"eachFunc","generated":{"line":19,"column":44},"source":"node_modules/lodash-es/_baseFindKey.js","original":{"line":12,"column":44}},{"generated":{"line":19,"column":52},"source":"node_modules/lodash-es/_baseFindKey.js","original":{"line":12,"column":0}},{"generated":{"line":19,"column":54},"source":"node_modules/lodash-es/_baseFindKey.js","original":{"line":12,"column":54}},{"generated":{"line":20,"column":0},"source":"node_modules/lodash-es/_baseFindKey.js","original":{"line":13,"column":2}},{"name":"result","generated":{"line":20,"column":6},"source":"node_modules/lodash-es/_baseFindKey.js","original":{"line":13,"column":6}},{"generated":{"line":20,"column":12},"source":"node_modules/lodash-es/_baseFindKey.js","original":{"line":13,"column":2}},{"name":"eachFunc","generated":{"line":21,"column":0},"source":"node_modules/lodash-es/_baseFindKey.js","original":{"line":14,"column":2}},{"name":"eachFunc","generated":{"line":21,"column":2},"source":"node_modules/lodash-es/_baseFindKey.js","original":{"line":14,"column":2}},{"generated":{"line":21,"column":10},"source":"node_modules/lodash-es/_baseFindKey.js","original":{"line":14,"column":10}},{"name":"collection","generated":{"line":21,"column":11},"source":"node_modules/lodash-es/_baseFindKey.js","original":{"line":14,"column":11}},{"generated":{"line":21,"column":21},"source":"node_modules/lodash-es/_baseFindKey.js","original":{"line":14,"column":10}},{"generated":{"line":21,"column":23},"source":"node_modules/lodash-es/_baseFindKey.js","original":{"line":14,"column":23}},{"name":"value","generated":{"line":21,"column":33},"source":"node_modules/lodash-es/_baseFindKey.js","original":{"line":14,"column":32}},{"generated":{"line":21,"column":38},"source":"node_modules/lodash-es/_baseFindKey.js","original":{"line":14,"column":23}},{"name":"key","generated":{"line":21,"column":40},"source":"node_modules/lodash-es/_baseFindKey.js","original":{"line":14,"column":39}},{"generated":{"line":21,"column":43},"source":"node_modules/lodash-es/_baseFindKey.js","original":{"line":14,"column":23}},{"name":"collection","generated":{"line":21,"column":45},"source":"node_modules/lodash-es/_baseFindKey.js","original":{"line":14,"column":44}},{"generated":{"line":21,"column":55},"source":"node_modules/lodash-es/_baseFindKey.js","original":{"line":14,"column":23}},{"generated":{"line":21,"column":57},"source":"node_modules/lodash-es/_baseFindKey.js","original":{"line":14,"column":56}},{"generated":{"line":22,"column":0},"source":"node_modules/lodash-es/_baseFindKey.js","original":{"line":15,"column":4}},{"name":"predicate","generated":{"line":22,"column":8},"source":"node_modules/lodash-es/_baseFindKey.js","original":{"line":15,"column":8}},{"generated":{"line":22,"column":17},"source":"node_modules/lodash-es/_baseFindKey.js","original":{"line":15,"column":17}},{"name":"value","generated":{"line":22,"column":18},"source":"node_modules/lodash-es/_baseFindKey.js","original":{"line":15,"column":18}},{"generated":{"line":22,"column":23},"source":"node_modules/lodash-es/_baseFindKey.js","original":{"line":15,"column":17}},{"name":"key","generated":{"line":22,"column":25},"source":"node_modules/lodash-es/_baseFindKey.js","original":{"line":15,"column":25}},{"generated":{"line":22,"column":28},"source":"node_modules/lodash-es/_baseFindKey.js","original":{"line":15,"column":17}},{"name":"collection","generated":{"line":22,"column":30},"source":"node_modules/lodash-es/_baseFindKey.js","original":{"line":15,"column":30}},{"generated":{"line":22,"column":40},"source":"node_modules/lodash-es/_baseFindKey.js","original":{"line":15,"column":17}},{"generated":{"line":22,"column":41},"source":"node_modules/lodash-es/_baseFindKey.js","original":{"line":15,"column":4}},{"generated":{"line":22,"column":43},"source":"node_modules/lodash-es/_baseFindKey.js","original":{"line":15,"column":43}},{"name":"result","generated":{"line":23,"column":0},"source":"node_modules/lodash-es/_baseFindKey.js","original":{"line":16,"column":6}},{"name":"result","generated":{"line":23,"column":6},"source":"node_modules/lodash-es/_baseFindKey.js","original":{"line":16,"column":6}},{"generated":{"line":23,"column":12},"source":"node_modules/lodash-es/_baseFindKey.js","original":{"line":16,"column":12}},{"name":"key","generated":{"line":23,"column":15},"source":"node_modules/lodash-es/_baseFindKey.js","original":{"line":16,"column":15}},{"generated":{"line":23,"column":18},"source":"node_modules/lodash-es/_baseFindKey.js","original":{"line":16,"column":6}},{"generated":{"line":24,"column":0},"source":"node_modules/lodash-es/_baseFindKey.js","original":{"line":17,"column":6}},{"generated":{"line":24,"column":13},"source":"node_modules/lodash-es/_baseFindKey.js","original":{"line":17,"column":13}},{"generated":{"line":24,"column":18},"source":"node_modules/lodash-es/_baseFindKey.js","original":{"line":17,"column":6}},{"generated":{"line":25,"column":0},"source":"node_modules/lodash-es/_baseFindKey.js","original":{"line":18,"column":5}},{"generated":{"line":26,"column":0},"source":"node_modules/lodash-es/_baseFindKey.js","original":{"line":19,"column":3}},{"generated":{"line":26,"column":3},"source":"node_modules/lodash-es/_baseFindKey.js","original":{"line":14,"column":10}},{"generated":{"line":26,"column":4},"source":"node_modules/lodash-es/_baseFindKey.js","original":{"line":14,"column":2}},{"generated":{"line":27,"column":0},"source":"node_modules/lodash-es/_baseFindKey.js","original":{"line":20,"column":2}},{"name":"result","generated":{"line":27,"column":9},"source":"node_modules/lodash-es/_baseFindKey.js","original":{"line":20,"column":9}},{"generated":{"line":27,"column":15},"source":"node_modules/lodash-es/_baseFindKey.js","original":{"line":20,"column":2}},{"generated":{"line":28,"column":0},"source":"node_modules/lodash-es/_baseFindKey.js","original":{"line":21,"column":1}},{"name":"baseFindKey","generated":{"line":30,"column":15},"source":"node_modules/lodash-es/_baseFindKey.js","original":{"line":23,"column":15}}],"sources":{"node_modules/lodash-es/_baseFindKey.js":"/**\n * The base implementation of methods like `_.findKey` and `_.findLastKey`,\n * without support for iteratee shorthands, which iterates over `collection`\n * using `eachFunc`.\n *\n * @private\n * @param {Array|Object} collection The collection to inspect.\n * @param {Function} predicate The function invoked per iteration.\n * @param {Function} eachFunc The function to iterate over `collection`.\n * @returns {*} Returns the found element or its key, else `undefined`.\n */\nfunction baseFindKey(collection, predicate, eachFunc) {\n  var result;\n  eachFunc(collection, function(value, key, collection) {\n    if (predicate(value, key, collection)) {\n      result = key;\n      return false;\n    }\n  });\n  return result;\n}\n\nexport default baseFindKey;\n"},"lineCount":null}},"error":null,"hash":"bdf81bfc621333a09cb407deee0c6cbc","cacheData":{"env":{}}}