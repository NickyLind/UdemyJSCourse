{"id":"node_modules/lodash-es/isEqualWith.js","dependencies":[{"name":"C:\\Users\\nicho\\Desktop\\Udemy\\TheCompleteJavascriptCourse\\complete-javascript-course\\17-Modern-JS-Modules-Tooling\\starter\\package.json","includedInParent":true,"mtime":1629411845000},{"name":"C:\\Users\\nicho\\Desktop\\Udemy\\TheCompleteJavascriptCourse\\complete-javascript-course\\17-Modern-JS-Modules-Tooling\\starter\\node_modules\\lodash-es\\package.json","includedInParent":true,"mtime":1629405926538},{"name":"./_baseIsEqual.js","loc":{"line":1,"column":24},"parent":"C:\\Users\\nicho\\Desktop\\Udemy\\TheCompleteJavascriptCourse\\complete-javascript-course\\17-Modern-JS-Modules-Tooling\\starter\\node_modules\\lodash-es\\isEqualWith.js","resolved":"C:\\Users\\nicho\\Desktop\\Udemy\\TheCompleteJavascriptCourse\\complete-javascript-course\\17-Modern-JS-Modules-Tooling\\starter\\node_modules\\lodash-es\\_baseIsEqual.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _baseIsEqual = _interopRequireDefault(require(\"./_baseIsEqual.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * This method is like `_.isEqual` except that it accepts `customizer` which\n * is invoked to compare values. If `customizer` returns `undefined`, comparisons\n * are handled by the method instead. The `customizer` is invoked with up to\n * six arguments: (objValue, othValue [, index|key, object, other, stack]).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @param {Function} [customizer] The function to customize comparisons.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * function isGreeting(value) {\n *   return /^h(?:i|ello)$/.test(value);\n * }\n *\n * function customizer(objValue, othValue) {\n *   if (isGreeting(objValue) && isGreeting(othValue)) {\n *     return true;\n *   }\n * }\n *\n * var array = ['hello', 'goodbye'];\n * var other = ['hi', 'goodbye'];\n *\n * _.isEqualWith(array, other, customizer);\n * // => true\n */\nfunction isEqualWith(value, other, customizer) {\n  customizer = typeof customizer == 'function' ? customizer : undefined;\n  var result = customizer ? customizer(value, other) : undefined;\n  return result === undefined ? (0, _baseIsEqual.default)(value, other, undefined, customizer) : !!result;\n}\n\nvar _default = isEqualWith;\nexports.default = _default;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"node_modules/lodash-es/isEqualWith.js","original":{"line":1,"column":0}},{"generated":{"line":12,"column":0},"source":"node_modules/lodash-es/isEqualWith.js","original":{"line":3,"column":0}},{"generated":{"line":13,"column":0},"source":"node_modules/lodash-es/isEqualWith.js","original":{"line":4,"column":0}},{"generated":{"line":14,"column":0},"source":"node_modules/lodash-es/isEqualWith.js","original":{"line":5,"column":0}},{"generated":{"line":15,"column":0},"source":"node_modules/lodash-es/isEqualWith.js","original":{"line":6,"column":0}},{"generated":{"line":16,"column":0},"source":"node_modules/lodash-es/isEqualWith.js","original":{"line":7,"column":0}},{"generated":{"line":17,"column":0},"source":"node_modules/lodash-es/isEqualWith.js","original":{"line":8,"column":0}},{"generated":{"line":18,"column":0},"source":"node_modules/lodash-es/isEqualWith.js","original":{"line":9,"column":0}},{"generated":{"line":19,"column":0},"source":"node_modules/lodash-es/isEqualWith.js","original":{"line":10,"column":0}},{"generated":{"line":20,"column":0},"source":"node_modules/lodash-es/isEqualWith.js","original":{"line":11,"column":0}},{"generated":{"line":21,"column":0},"source":"node_modules/lodash-es/isEqualWith.js","original":{"line":12,"column":0}},{"generated":{"line":22,"column":0},"source":"node_modules/lodash-es/isEqualWith.js","original":{"line":13,"column":0}},{"generated":{"line":23,"column":0},"source":"node_modules/lodash-es/isEqualWith.js","original":{"line":14,"column":0}},{"generated":{"line":24,"column":0},"source":"node_modules/lodash-es/isEqualWith.js","original":{"line":15,"column":0}},{"generated":{"line":25,"column":0},"source":"node_modules/lodash-es/isEqualWith.js","original":{"line":16,"column":0}},{"generated":{"line":26,"column":0},"source":"node_modules/lodash-es/isEqualWith.js","original":{"line":17,"column":0}},{"generated":{"line":27,"column":0},"source":"node_modules/lodash-es/isEqualWith.js","original":{"line":18,"column":0}},{"generated":{"line":28,"column":0},"source":"node_modules/lodash-es/isEqualWith.js","original":{"line":19,"column":0}},{"generated":{"line":29,"column":0},"source":"node_modules/lodash-es/isEqualWith.js","original":{"line":20,"column":0}},{"generated":{"line":30,"column":0},"source":"node_modules/lodash-es/isEqualWith.js","original":{"line":21,"column":0}},{"generated":{"line":31,"column":0},"source":"node_modules/lodash-es/isEqualWith.js","original":{"line":22,"column":0}},{"generated":{"line":32,"column":0},"source":"node_modules/lodash-es/isEqualWith.js","original":{"line":23,"column":0}},{"generated":{"line":33,"column":0},"source":"node_modules/lodash-es/isEqualWith.js","original":{"line":24,"column":0}},{"generated":{"line":34,"column":0},"source":"node_modules/lodash-es/isEqualWith.js","original":{"line":25,"column":0}},{"generated":{"line":35,"column":0},"source":"node_modules/lodash-es/isEqualWith.js","original":{"line":26,"column":0}},{"generated":{"line":36,"column":0},"source":"node_modules/lodash-es/isEqualWith.js","original":{"line":27,"column":0}},{"generated":{"line":37,"column":0},"source":"node_modules/lodash-es/isEqualWith.js","original":{"line":28,"column":0}},{"generated":{"line":38,"column":0},"source":"node_modules/lodash-es/isEqualWith.js","original":{"line":29,"column":0}},{"generated":{"line":39,"column":0},"source":"node_modules/lodash-es/isEqualWith.js","original":{"line":30,"column":0}},{"generated":{"line":40,"column":0},"source":"node_modules/lodash-es/isEqualWith.js","original":{"line":31,"column":0}},{"generated":{"line":41,"column":0},"source":"node_modules/lodash-es/isEqualWith.js","original":{"line":32,"column":0}},{"generated":{"line":42,"column":0},"source":"node_modules/lodash-es/isEqualWith.js","original":{"line":33,"column":0}},{"generated":{"line":43,"column":0},"source":"node_modules/lodash-es/isEqualWith.js","original":{"line":34,"column":0}},{"generated":{"line":44,"column":0},"source":"node_modules/lodash-es/isEqualWith.js","original":{"line":35,"column":0}},{"name":"isEqualWith","generated":{"line":44,"column":9},"source":"node_modules/lodash-es/isEqualWith.js","original":{"line":35,"column":9}},{"generated":{"line":44,"column":20},"source":"node_modules/lodash-es/isEqualWith.js","original":{"line":35,"column":0}},{"name":"value","generated":{"line":44,"column":21},"source":"node_modules/lodash-es/isEqualWith.js","original":{"line":35,"column":21}},{"generated":{"line":44,"column":26},"source":"node_modules/lodash-es/isEqualWith.js","original":{"line":35,"column":0}},{"name":"other","generated":{"line":44,"column":28},"source":"node_modules/lodash-es/isEqualWith.js","original":{"line":35,"column":28}},{"generated":{"line":44,"column":33},"source":"node_modules/lodash-es/isEqualWith.js","original":{"line":35,"column":0}},{"name":"customizer","generated":{"line":44,"column":35},"source":"node_modules/lodash-es/isEqualWith.js","original":{"line":35,"column":35}},{"generated":{"line":44,"column":45},"source":"node_modules/lodash-es/isEqualWith.js","original":{"line":35,"column":0}},{"generated":{"line":44,"column":47},"source":"node_modules/lodash-es/isEqualWith.js","original":{"line":35,"column":47}},{"name":"customizer","generated":{"line":45,"column":0},"source":"node_modules/lodash-es/isEqualWith.js","original":{"line":36,"column":2}},{"name":"customizer","generated":{"line":45,"column":2},"source":"node_modules/lodash-es/isEqualWith.js","original":{"line":36,"column":2}},{"generated":{"line":45,"column":12},"source":"node_modules/lodash-es/isEqualWith.js","original":{"line":36,"column":12}},{"generated":{"line":45,"column":15},"source":"node_modules/lodash-es/isEqualWith.js","original":{"line":36,"column":15}},{"name":"customizer","generated":{"line":45,"column":22},"source":"node_modules/lodash-es/isEqualWith.js","original":{"line":36,"column":22}},{"generated":{"line":45,"column":32},"source":"node_modules/lodash-es/isEqualWith.js","original":{"line":36,"column":15}},{"generated":{"line":45,"column":36},"source":"node_modules/lodash-es/isEqualWith.js","original":{"line":36,"column":36}},{"generated":{"line":45,"column":46},"source":"node_modules/lodash-es/isEqualWith.js","original":{"line":36,"column":15}},{"name":"customizer","generated":{"line":45,"column":49},"source":"node_modules/lodash-es/isEqualWith.js","original":{"line":36,"column":49}},{"generated":{"line":45,"column":59},"source":"node_modules/lodash-es/isEqualWith.js","original":{"line":36,"column":15}},{"name":"undefined","generated":{"line":45,"column":62},"source":"node_modules/lodash-es/isEqualWith.js","original":{"line":36,"column":62}},{"generated":{"line":45,"column":71},"source":"node_modules/lodash-es/isEqualWith.js","original":{"line":36,"column":2}},{"generated":{"line":46,"column":0},"source":"node_modules/lodash-es/isEqualWith.js","original":{"line":37,"column":2}},{"name":"result","generated":{"line":46,"column":6},"source":"node_modules/lodash-es/isEqualWith.js","original":{"line":37,"column":6}},{"generated":{"line":46,"column":12},"source":"node_modules/lodash-es/isEqualWith.js","original":{"line":37,"column":12}},{"name":"customizer","generated":{"line":46,"column":15},"source":"node_modules/lodash-es/isEqualWith.js","original":{"line":37,"column":15}},{"generated":{"line":46,"column":25},"source":"node_modules/lodash-es/isEqualWith.js","original":{"line":37,"column":25}},{"name":"customizer","generated":{"line":46,"column":28},"source":"node_modules/lodash-es/isEqualWith.js","original":{"line":37,"column":28}},{"generated":{"line":46,"column":38},"source":"node_modules/lodash-es/isEqualWith.js","original":{"line":37,"column":38}},{"name":"value","generated":{"line":46,"column":39},"source":"node_modules/lodash-es/isEqualWith.js","original":{"line":37,"column":39}},{"generated":{"line":46,"column":44},"source":"node_modules/lodash-es/isEqualWith.js","original":{"line":37,"column":38}},{"name":"other","generated":{"line":46,"column":46},"source":"node_modules/lodash-es/isEqualWith.js","original":{"line":37,"column":46}},{"generated":{"line":46,"column":51},"source":"node_modules/lodash-es/isEqualWith.js","original":{"line":37,"column":38}},{"generated":{"line":46,"column":52},"source":"node_modules/lodash-es/isEqualWith.js","original":{"line":37,"column":25}},{"name":"undefined","generated":{"line":46,"column":55},"source":"node_modules/lodash-es/isEqualWith.js","original":{"line":37,"column":55}},{"generated":{"line":46,"column":64},"source":"node_modules/lodash-es/isEqualWith.js","original":{"line":37,"column":2}},{"generated":{"line":47,"column":0},"source":"node_modules/lodash-es/isEqualWith.js","original":{"line":38,"column":2}},{"name":"result","generated":{"line":47,"column":9},"source":"node_modules/lodash-es/isEqualWith.js","original":{"line":38,"column":9}},{"generated":{"line":47,"column":15},"source":"node_modules/lodash-es/isEqualWith.js","original":{"line":38,"column":15}},{"name":"undefined","generated":{"line":47,"column":20},"source":"node_modules/lodash-es/isEqualWith.js","original":{"line":38,"column":20}},{"generated":{"line":47,"column":29},"source":"node_modules/lodash-es/isEqualWith.js","original":{"line":38,"column":9}},{"generated":{"line":47,"column":32},"source":"node_modules/lodash-es/isEqualWith.js","original":{"line":38,"column":32}},{"name":"value","generated":{"line":47,"column":58},"source":"node_modules/lodash-es/isEqualWith.js","original":{"line":38,"column":44}},{"generated":{"line":47,"column":63},"source":"node_modules/lodash-es/isEqualWith.js","original":{"line":38,"column":32}},{"name":"other","generated":{"line":47,"column":65},"source":"node_modules/lodash-es/isEqualWith.js","original":{"line":38,"column":51}},{"generated":{"line":47,"column":70},"source":"node_modules/lodash-es/isEqualWith.js","original":{"line":38,"column":32}},{"name":"undefined","generated":{"line":47,"column":72},"source":"node_modules/lodash-es/isEqualWith.js","original":{"line":38,"column":58}},{"generated":{"line":47,"column":81},"source":"node_modules/lodash-es/isEqualWith.js","original":{"line":38,"column":32}},{"name":"customizer","generated":{"line":47,"column":83},"source":"node_modules/lodash-es/isEqualWith.js","original":{"line":38,"column":69}},{"generated":{"line":47,"column":93},"source":"node_modules/lodash-es/isEqualWith.js","original":{"line":38,"column":32}},{"generated":{"line":47,"column":94},"source":"node_modules/lodash-es/isEqualWith.js","original":{"line":38,"column":9}},{"generated":{"line":47,"column":97},"source":"node_modules/lodash-es/isEqualWith.js","original":{"line":38,"column":83}},{"generated":{"line":47,"column":98},"source":"node_modules/lodash-es/isEqualWith.js","original":{"line":38,"column":84}},{"name":"result","generated":{"line":47,"column":99},"source":"node_modules/lodash-es/isEqualWith.js","original":{"line":38,"column":85}},{"generated":{"line":47,"column":105},"source":"node_modules/lodash-es/isEqualWith.js","original":{"line":38,"column":2}},{"generated":{"line":48,"column":0},"source":"node_modules/lodash-es/isEqualWith.js","original":{"line":39,"column":1}},{"name":"isEqualWith","generated":{"line":50,"column":15},"source":"node_modules/lodash-es/isEqualWith.js","original":{"line":41,"column":15}}],"sources":{"node_modules/lodash-es/isEqualWith.js":"import baseIsEqual from './_baseIsEqual.js';\n\n/**\n * This method is like `_.isEqual` except that it accepts `customizer` which\n * is invoked to compare values. If `customizer` returns `undefined`, comparisons\n * are handled by the method instead. The `customizer` is invoked with up to\n * six arguments: (objValue, othValue [, index|key, object, other, stack]).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @param {Function} [customizer] The function to customize comparisons.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * function isGreeting(value) {\n *   return /^h(?:i|ello)$/.test(value);\n * }\n *\n * function customizer(objValue, othValue) {\n *   if (isGreeting(objValue) && isGreeting(othValue)) {\n *     return true;\n *   }\n * }\n *\n * var array = ['hello', 'goodbye'];\n * var other = ['hi', 'goodbye'];\n *\n * _.isEqualWith(array, other, customizer);\n * // => true\n */\nfunction isEqualWith(value, other, customizer) {\n  customizer = typeof customizer == 'function' ? customizer : undefined;\n  var result = customizer ? customizer(value, other) : undefined;\n  return result === undefined ? baseIsEqual(value, other, undefined, customizer) : !!result;\n}\n\nexport default isEqualWith;\n"},"lineCount":null}},"error":null,"hash":"6060901b89e2572c0bfdcd192dc38a19","cacheData":{"env":{}}}